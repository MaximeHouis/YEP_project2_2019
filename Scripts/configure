#!/bin/bash -e

# MINGW64_NT-???, Darwin, Linux
OS=$(uname)

if [[ $UID == 0 ]]; then
  echo "Script must not be run as root"
  exit 1
fi

if [[ $# != 1 && $# != 2 ]]; then
  echo "usage: $0 (Debug/Release/...) [-Werror]"
  exit 1
fi

if [[ $2 == "-Werror" ]]; then
  MEDIAPLAYER_ERROR="-DMEDIAPLAYER_ERROR=1"
else
  MEDIAPLAYER_ERROR=""
fi

if [[ $1 == "Tests" ]]; then
  MEDIAPLAYER_TESTS="-DMEDIAPLAYER_TESTS=1"
else
  MEDIAPLAYER_TESTS=""
fi

if [[ $(uname -a) =~ "Ubuntu" ]]; then
  # GitHub Actions uses Ubuntu, needs gcc>=8
  export CC="gcc-8"
  export CXX="g++-8"
fi

# Add git submodules (from .gitmodules)
echo "== Fetching submodules"
git submodule update --init --recursive

echo "== Installing pip dependencies"
python -m pip install --user -r requirements.txt >/dev/null

echo "== Setting up conan"
conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan &>/dev/null || true
if [ ! -f "$HOME/.conan/profiles/default" ]; then
  conan profile new default --detect
fi

# GitHub Actions uses Ubuntu
echo "== Setting up OS specific configurations"
if [[ $(uname -a) =~ "Ubuntu" ]]; then
  if [[ $USER == "runner" ]]; then
    conan profile update settings.compiler.libcxx=libstdc++11 default

    sudo add-apt-repository ppa:snaipewastaken/ppa
    sudo apt update
    sudo apt install -y gcovr criterion-dev
  fi
fi

# Create/Reload build directory
echo "== Creating build environment"
rm -rf build
mkdir -p build
cd build

echo "== Running CMake"
case "$OS" in
"Linux" | "Darwin")
  cmake -DCMAKE_BUILD_TYPE="$1" $MEDIAPLAYER_TESTS $MEDIAPLAYER_ERROR ..
  ;;
*)
  cmake -DCMAKE_BUILD_TYPE="$1" $MEDIAPLAYER_TESTS $MEDIAPLAYER_ERROR -A x64 ..
  ;;
esac

echo "== Build mode: $1"
